AWSTemplateFormatVersion: 2010-09-09

Description: This template creates a vpc with public subnet

Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: "VPC CIDR"
        Parameters: 
          - VpcCIDR
      - 
        Label: 
          default: "Subnet CIDR"
        Parameters:
          - PublicSubnet1CIDR
      - 
        Label: 
          default: "SSH CIDR"
        Parameters: 
          - SSHLocation

Parameters:
  VpcCIDR:
    Default: 10.0.0.0/16
    Description: IP range (CIDR notation) for this VPC
    Type: String

  PublicSubnet1CIDR:
    Default: 10.0.0.0/24
    Description: IP range (CIDR notation) for the public subnet 1
    Type: String

  PublicSubnet2CIDR:
    Default: 10.0.1.0/24
    Description: IP range (CIDR notation) for the public subnet 2
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Project VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Project IGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 1
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 2
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Public Route Table
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  VulnerableServerSecurityGroup1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow the ingress FTP, RDP, MySQL/Aurora traffic from 0.0.0.0/0 to the EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '21'
          ToPort: '21'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0

      Tags:
        - Key: Name
          Value: Vulnerable Security Group 1
      VpcId: !Ref VPC

  VulnerableServerSecurityGroup2:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow the ingress HTTP, HTTPS and SSH traffic from 0.0.0.0/0 to the EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

      Tags:
        - Key: Name
          Value: Vulnerable Security Group 2
      VpcId: !Ref VPC

Outputs:
  VPC:
    Description: VPC ID
    Export:
      Name: !Sub ${AWS::StackName}-VPC
    Value: !Ref VPC

  PublicSubnet1: 
    Description: Public Subnet 1 ID
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet1
    Value: !Ref PublicSubnet1

  PublicSubnet2: 
    Description: Public Subnet 2 ID
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet2
    Value: !Ref PublicSubnet1

  VulnerableServerSecurityGroup1:
    Description: Vulnerable Security Group ID 1
    Export:
      Name: !Sub ${AWS::StackName}-VulnerableServerSecurityGroup1
    Value: !Ref VulnerableServerSecurityGroup1

  VulnerableServerSecurityGroup2:
    Description: Vulnerable Security Group ID 2
    Export:
      Name: !Sub ${AWS::StackName}-VulnerableServerSecurityGroup2
    Value: !Ref VulnerableServerSecurityGroup2